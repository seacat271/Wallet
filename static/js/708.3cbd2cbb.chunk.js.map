{"version":3,"file":"static/js/708.3cbd2cbb.chunk.js","mappings":"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","sources":["hooks/diagram.js","components/Chart/Chart.js","components/SelectBtn/SelectBtn.styled.js","components/SelectBtn/SelectBtn.jsx","components/SelectBtn/SelectBtnMonth.jsx","components/Table/Table.styled.js","components/Table/Table.jsx","components/DiagramTable/DiagramTable.styled.js","utility/timeConvertor.js","components/DiagramTable/DiagramTable.jsx","pages/DiagramPage.jsx"],"sourcesContent":["// import { useSelector } from 'react-redux';\n// import {\n//   selectTransactionCategories,\n//   selectTransactionsForPeriod,\n// } from 'redux/transactions/transactionsSelectors';\nimport { useHookTransaction } from 'hooks';\n\nconst useTransaction = () => {\n  const { forPeriod } = useHookTransaction();\n  const { categories } = useHookTransaction();\n  if (forPeriod.length === 0) {\n    return {};\n  }\n  let categoriesSummary = categories.map(\n    elCat =>\n      forPeriod.categoriesSummary.find(el => el.name === elCat.name) ?? {\n        name: elCat.name,\n        type: elCat.type,\n        total: 0,\n      }\n  );\n\n  return { ...forPeriod, categoriesSummary };\n};\n\nexport default useTransaction;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { theme } from '../../utility/theme';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectTransactionsForPeriod } from 'redux/transactions/transactionsSelectors';\nimport useTransaction from 'hooks/diagram';\n// import { cssTransition } from 'react-toastify';\n\nconst Div = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  padding-bottom: 32px;\n\n  ${props => props.theme.breakpoints.tab} {\n    width: 334px;\n    height: 334px;\n    margin: 0;\n    padding: 0;\n    padding-right: 32px;\n  }\n`;\nconst getData = transactions => {\n  const tdata =\n    transactions.filter(item => item.total !== 0 && item.name !== 'Income')\n      .length > 0\n      ? transactions\n      : [];\n\n  const data =\n    tdata.length !== 0\n      ? {\n          labels: tdata.map(item =>\n            item.name !== 'Income' ? item.name : null\n          ),\n\n          datasets: [\n            {\n              data: tdata.map(item =>\n                item.name !== 'Income' ? item.total : null\n              ),\n              backgroundColor: theme.colors.diagram,\n              borderWidth: 1,\n              hoverOffset: 10,\n              cutout: '70%',\n            },\n          ],\n        }\n      : {\n          datasets: [\n            {\n              data: [1],\n              backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n              borderWidth: 1,\n              hoverOffset: 10,\n              cutout: '70%',\n            },\n          ],\n        };\n  return data;\n};\n\nconst getOptions = transactions => {\n  const tData = transactions.filter(item => item.total !== 0);\n  const options =\n    tData.length !== 0\n      ? {\n          plugins: {\n            legend: {\n              display: false,\n            },\n          },\n          layout: {\n            padding: 7,\n          },\n        }\n      : {\n          plugins: {\n            legend: {\n              display: false,\n            },\n            tooltip: {\n              enabled: false,\n            },\n          },\n          layout: {\n            padding: 7,\n          },\n        };\n  return options;\n};\n\nconst Chart = ({ dataTransactions }) => {\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const { periodTotal } = useSelector(selectTransactionsForPeriod);\n  const { expenseSummary, incomeSummary } = useTransaction();\n\n  const data = getData(dataTransactions);\n  const options = getOptions(dataTransactions);\n  const fontWeight = theme.fontWeights.bold;\n  const fontSize = theme.fontSizes.m;\n  const mainFont = theme.fonts.main;\n\n  const plugins = [\n    {\n      beforeDraw: function (chart) {\n        const width = chart.width,\n          height = chart.height,\n          ctx = chart.ctx;\n        ctx.restore();\n        ctx.font = `${fontWeight} ${fontSize} ${mainFont}`;\n        ctx.textBaseline = 'center';\n        const text = 'Difference: ₴ ' + periodTotal.toFixed(2),\n          textX = Math.round((width - ctx.measureText(text).width) / 2),\n          textY = height / 2;\n        ctx.fillText(text, textX, textY);\n\n        const textExp = `Expenses: ₴ ${expenseSummary.toFixed(2)}`,\n          textExpX = Math.round((width - ctx.measureText(textExp).width) / 2),\n          textExpY = height / 1.67;\n\n        ctx.fillText(textExp, textExpX, textExpY);\n        const textInc = `Income: ₴ ${incomeSummary.toFixed(2)}`,\n          textIncX = Math.round((width - ctx.measureText(textInc).width) / 2),\n          textIncY = height / 2.5;\n        ctx.fillText(textInc, textIncX, textIncY);\n        ctx.save();\n      },\n    },\n  ];\n\n  return (\n    <Div>\n      <h1>Statistics</h1>\n      <Doughnut\n        data={data}\n        options={options}\n        plugins={plugins}\n        width={280}\n        height={280}\n      />\n    </Div>\n  );\n};\n\nChart.propTypes = {\n  dataTransactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      total: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Chart;\n","import styled from 'styled-components';\n\nconst WraperSelect = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: center;\n  ${props => props.theme.breakpoints.tab} {\n    justify-content: space-between;\n  }\n`;\nconst IconBtn = styled.svg`\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  margin-left: auto;\n  margin-right: 20px;\n`;\nconst SelectBtn = styled.div`\n  position: relative;\n  display: flex;\n  background: #e7eaf2;\n  width: 280px;\n  height: 50px;\n  border: 1px solid #000000;\n  border-radius: 30px;\n  margin-bottom: 20px;\n  align-items: center;\n  justify-content: flex-start;\n  &:hover {\n    background: rgba(255, 255, 255, 0.7);\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n  }\n  ${props => props.theme.breakpoints.tab} {\n    width: 165px;\n  }\n`;\n\nconst SelectText = styled.div`\n  margin-left: 20px;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: ${props => props.theme.colors.black};\n`;\nconst Box = styled.div`\n  display: block;\n  position: relative;\n`;\nconst WraperPicker = styled.div`\n  & .react-datepicker {\n    z-index: 1000;\n    position: absolute;\n    top: 50px;\n    background: rgba(255, 255, 255, 0.9);\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    backdrop-filter: blur(25px);\n    border-radius: 20px;\n    ${props => props.theme.breakpoints.tab} {\n      padding: 0;\n    }\n  }\n  & .react-datepicker__year-wrapper {\n    max-width: 280px;\n    justify-content: center;\n    gap: 15px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n  }\n\n  & .react-datepicker__header {\n    background: rgba(255, 255, 255, 0.7);\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    backdrop-filter: blur(25px);\n    border-radius: 20px;\n  }\n  & .react-datepicker__month {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    max-width: 280px;\n  }\n  & .react-datepicker__month-wrapper {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    width: 100%;\n    margin-bottom: 15px;\n  }\n\n  & .react-datepicker__month-wrapper:first-child {\n    margin-top: 15px;\n  }\n`;\n\nexport { IconBtn, SelectBtn, SelectText, WraperSelect, WraperPicker, Box };\n","import { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport select from '../../assets/images/icons.svg';\nimport {\n  IconBtn,\n  SelectBtn,\n  SelectText,\n  WraperPicker,\n  Box,\n} from './SelectBtn.styled';\n\nexport default function SelectButton({ year, setDate }) {\n  const [isOpenYear, setIsOpenYear] = useState(false);\n\n  const handleChangeYear = e => {\n    const year = e.getFullYear();\n\n    setDate(prevDate => ({ ...prevDate, year }));\n    setIsOpenYear(!isOpenYear);\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setIsOpenYear(!isOpenYear);\n  };\n\n  return (\n    <Box>\n      <SelectBtn onClick={handleClick}>\n        <SelectText>{year}</SelectText>\n        <IconBtn>\n          <use href={select + `#icon-select`} />\n        </IconBtn>\n      </SelectBtn>\n      <WraperPicker>\n        {isOpenYear && (\n          <DatePicker\n            selected={new Date()}\n            onChange={handleChangeYear}\n            showYearPicker\n            inline\n            dateFormat=\"yyyy\"\n          />\n        )}\n      </WraperPicker>\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport select from '../../assets/images/icons.svg';\nimport {\n  IconBtn,\n  SelectBtn,\n  SelectText,\n  WraperPicker,\n  Box,\n} from './SelectBtn.styled';\nconst monthsString = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nexport default function SelectButtonMonth({ month, setDate }) {\n  const [isOpenMonth, setIsOpenMonth] = useState(false);\n\n  const handleChangeMonth = e => {\n    const month = e.getMonth() + 1;\n    setDate(prevDate => ({ ...prevDate, month }));\n    setIsOpenMonth(!isOpenMonth);\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setIsOpenMonth(!isOpenMonth);\n  };\n\n  return (\n    <Box>\n      <SelectBtn onClick={handleClick}>\n        <SelectText>{monthsString[month - 1]}</SelectText>\n        <IconBtn>\n          <use href={select + `#icon-select`} />\n        </IconBtn>\n      </SelectBtn>\n      <WraperPicker>\n        {isOpenMonth && (\n          <DatePicker\n            selected={new Date()}\n            onChange={handleChangeMonth}\n            inline\n            dateFormat=\"MM/yyyy\"\n            showMonthYearPicker\n          />\n        )}\n      </WraperPicker>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\n\nconst WraperDiv = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* padding-top: ${props => props.theme.space[3]}px; */\n  padding-bottom: ${props => props.theme.space[3]}px;\n  ${props => props.theme.breakpoints.tab} {\n    width: 351px;\n    margin-left: auto;\n  }\n`;\n\nconst WraperSelect = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: center;\n  ${props => props.theme.breakpoints.tab} {\n    justify-content: space-between;\n  }\n`;\nconst TableHead = styled.div`\n  width: 280px;\n  height: 58px;\n  background: ${props => props.theme.colors.white};\n  border-radius: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  ${props => props.theme.breakpoints.tab} {\n    width: 350px;\n  }\n`;\nconst ParagraphHead = styled.p`\n  font-family: ${props => props.theme.fonts.name};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.main};\n  color: ${props => props.theme.colors.black};\n  margin: 0 ${props => props.theme.space[2]}px;\n  ${props => props.theme.breakpoints.tab} {\n    margin: 0 ${props => props.theme.space[3]}px;\n  }\n`;\nconst Paragraph = styled.p`\n  font-family: ${props => props.theme.fonts.name};\n  font-weight: ${props => props.theme.fontWeights.normal};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.main};\n  color: ${props => props.theme.colors.black};\n  margin: 0 ${props => props.theme.space[2]}px;\n`;\n\nconst ParagraphNumber = styled(Paragraph)`\n  text-align: right;\n  margin-left: auto;\n  margin-right: 17px;\n  ${props => props.theme.breakpoints.tab} {\n    margin-right: ${props => props.theme.space[3]}px;\n  }\n`;\nconst ParagraphText = styled(Paragraph)`\n  display: flex;\n  align-items: center;\n  margin-left: ${props => props.theme.space[1]}px;\n  ${props => props.theme.breakpoints.tab} {\n    margin-left: ${props => props.theme.space[1]}px;\n  }\n`;\n\nconst ParagraphTotal = styled.p`\n  font-family: ${props => props.theme.fonts.name};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.main};\n  color: ${props => (props.income ? '#24CCA7' : '#FF6596')};\n  text-align: right;\n  margin: 0;\n`;\n\nconst ColorSpan = styled.span`\n  width: 24px;\n  height: 24px;\n  left: 32.98px;\n  top: 736.52px;\n  border-radius: 2px;\n  margin-right: 16px;\n  margin-left: 12px;\n  background: ${props => props.theme.colors.diagram[props.index]};\n  ${props => props.theme.breakpoints.tab} {\n    margin-left: ${props => props.theme.space[2]}px;\n  }\n`;\n\nconst TotalDiv = styled.div`\n  display: flex;\n  width: 240px;\n  justify-content: space-between;\n  ${props => props.theme.breakpoints.tab} {\n    width: 300px;\n    :last-child {\n      margin-top: 10px;\n    }\n  }\n`;\n\nconst ListUl = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  width: 280px;\n  height: 52px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  align-items: center;\n  &:hover {\n    background: rgba(255, 255, 255, 0.7);\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    border-radius: 5px;\n  }\n  ${props => props.theme.breakpoints.tab} {\n    width: 350px;\n  }\n`;\n\nexport {\n  ParagraphText,\n  ParagraphNumber,\n  WraperDiv,\n  ParagraphHead,\n  Paragraph,\n  ParagraphTotal,\n  ColorSpan,\n  TotalDiv,\n  ListUl,\n  Item,\n  TableHead,\n  // IconBtn,\n  // SelectBtn,\n  // SelectText,\n  WraperSelect,\n  // WraperPicker,\n};\n","import Chart from 'components/Chart';\nimport SelectButton from 'components/SelectBtn/SelectBtn';\nimport SelectButtonMonth from 'components/SelectBtn/SelectBtnMonth';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport useTransaction from 'hooks/diagram';\n\nimport {\n  ColorSpan,\n  Item,\n  ListUl,\n  ParagraphHead,\n  ParagraphNumber,\n  ParagraphText,\n  ParagraphTotal,\n  TableHead,\n  TotalDiv,\n  WraperDiv,\n  WraperSelect,\n} from './Table.styled';\n\nconst Table = ({ setDate }) => {\n  const {\n    categoriesSummary = [],\n    expenseSummary = 0,\n    incomeSummary = 0,\n    month,\n    year,\n  } = useTransaction();\n\n  return (\n    <>\n      <Chart dataTransactions={categoriesSummary} />\n      <WraperDiv>\n        <WraperSelect>\n          <SelectButtonMonth month={month} setDate={setDate} />\n          <SelectButton year={year} setDate={setDate} />\n        </WraperSelect>\n        <TableHead>\n          <ParagraphHead>Categories</ParagraphHead>\n          <ParagraphHead>Sum</ParagraphHead>\n        </TableHead>\n        <ListUl>\n          {categoriesSummary.map((item, index) => {\n            if (item.name !== 'Income') {\n              return (\n                <Item key={item.name}>\n                  <ColorSpan index={index}></ColorSpan>\n                  <ParagraphText>{item.name}</ParagraphText>\n                  <ParagraphNumber>{item.total.toFixed(2)}</ParagraphNumber>\n                </Item>\n              );\n            }\n            return null;\n          })}\n        </ListUl>\n        <TotalDiv>\n          <ParagraphText style={{ fontWeight: 700, margin: 0 }}>\n            Expenses:\n          </ParagraphText>\n          <ParagraphTotal>{expenseSummary.toFixed(2)}</ParagraphTotal>\n        </TotalDiv>\n        <TotalDiv>\n          <ParagraphText style={{ fontWeight: 700, margin: 0 }}>\n            Income:\n          </ParagraphText>\n          <ParagraphTotal income>{incomeSummary.toFixed(2)}</ParagraphTotal>\n        </TotalDiv>\n      </WraperDiv>\n    </>\n  );\n};\n\nexport default Table;\n","import styled from 'styled-components';\nexport const Wrapper = styled.div`\n  padding: 0 ${props => props.theme.space[2]}px;\n  margin: 0 auto;\n  max-width: 320px;\n  height: 100%;\n\n  ${props => props.theme.breakpoints.tab} {\n    padding: 0 ${props => props.theme.space[4]}px;\n    max-width: 768px;\n\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n\n  ${props => props.theme.breakpoints.desc} {\n    padding: 0 18px;\n    max-width: 1280px;\n    display: flex;\n  }\n`;\n\nexport const DiagramBox = styled.div`\n  width: 100%;\n  ${props => props.theme.breakpoints.tab} {\n    display: flex;\n  }\n  ${props => props.theme.breakpoints.desc} {\n    display: flex;\n    padding: 40px 0 0 69px;\n  }\n`;\n","function timeConverter() {\n  const UNIXdate = new Date();\n  const month = UNIXdate.getMonth() + 1;\n  const year = UNIXdate.getFullYear();\n  return { month, year };\n}\nexport default timeConverter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport HeroBar from 'components/HeroBar';\nimport Table from 'components/Table';\nimport Loader from 'components/Loader';\nimport Container from 'components/Container';\nimport Navigation from 'components/Navigation';\nimport { Wrapper, DiagramBox } from './DiagramTable.styled';\n\nimport {\n  getTransactionCategories,\n  getTransactionsForPeriod,\n} from 'redux/transactions/transactionsOperation';\nimport {\n  selectIsLoadingTransaction,\n  selectTransactionCategories,\n} from 'redux/transactions/transactionsSelectors';\n\nimport timeConverter from 'utility/timeConvertor';\nimport useIsMobile from 'hooks/isMobile';\n\nconst DiagramTable = () => {\n  const categories = useSelector(selectTransactionCategories);\n  const isMobileScreen = useIsMobile();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingTransaction);\n  const defaultDate = timeConverter();\n  const [date, setDate] = useState(defaultDate);\n  useEffect(() => {\n    categories.length === 0 && dispatch(getTransactionCategories());\n    dispatch(getTransactionsForPeriod(date));\n  }, [dispatch, date, categories]);\n  return (\n    <Container>\n      <Wrapper>\n        {!isMobileScreen ? <HeroBar /> : <Navigation />}\n        <DiagramBox>\n          {isLoading ? <Loader /> : <Table setDate={setDate} />}\n        </DiagramBox>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default DiagramTable;\n","import DiagramTable from 'components/DiagramTable/DiagramTable';\n\nconst DiagramPage = () => <DiagramTable />;\n\nexport default DiagramPage;\n"],"names":["forPeriod","useHookTransaction","categories","length","categoriesSummary","map","elCat","find","el","name","type","total","Div","styled","props","theme","breakpoints","tab","dataTransactions","ChartJS","ArcElement","Tooltip","Legend","periodTotal","useSelector","selectTransactionsForPeriod","useTransaction","expenseSummary","incomeSummary","data","transactions","tdata","filter","item","labels","datasets","backgroundColor","borderWidth","hoverOffset","cutout","getData","options","plugins","legend","display","layout","padding","tooltip","enabled","fontWeight","fontSize","mainFont","beforeDraw","chart","width","height","ctx","restore","font","textBaseline","text","toFixed","textX","Math","round","measureText","textY","fillText","textExp","textExpX","textExpY","textInc","textIncX","textIncY","save","IconBtn","SelectBtn","SelectText","colors","black","Box","WraperPicker","SelectButton","year","setDate","useState","isOpenYear","setIsOpenYear","onClick","e","preventDefault","href","select","selected","Date","onChange","getFullYear","prevDate","showYearPicker","inline","dateFormat","monthsString","SelectButtonMonth","month","isOpenMonth","setIsOpenMonth","getMonth","showMonthYearPicker","WraperDiv","space","WraperSelect","TableHead","white","ParagraphHead","fonts","fontWeights","bold","fontSizes","m","lineHeights","main","Paragraph","normal","s","ParagraphNumber","ParagraphText","ParagraphTotal","income","ColorSpan","diagram","index","TotalDiv","ListUl","Item","style","margin","Wrapper","desc","DiagramBox","UNIXdate","selectTransactionCategories","isMobileScreen","useIsMobile","dispatch","useDispatch","isLoading","selectIsLoadingTransaction","defaultDate","timeConverter","date","useEffect","getTransactionCategories","getTransactionsForPeriod","Container","Navigation","HeroBar","Loader"],"sourceRoot":""}